% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rational-class.R, R/other_methods.R,
%   R/rational-compare.R, R/rational-transformation.R
\docType{data}
\name{rational-class}
\alias{rational-class}
\alias{.rationalError0}
\alias{rational}
\alias{length,rationalS4-method}
\alias{length.rationalS3}
\alias{length.rationalR6}
\alias{[,rationalS4-method}
\alias{[<-,rationalS4-method}
\alias{[[,rationalS4-method}
\alias{[[<-,rationalS4-method}
\alias{[.rationalS3}
\alias{[<-.rationalS3}
\alias{[[.rationalS3}
\alias{[[<-.rationalS3}
\alias{[.rationalR6}
\alias{[<-.rationalR6}
\alias{[[.rationalR6}
\alias{[[<-.rationalR6}
\alias{print,rationalS4-method}
\alias{show,rationalS4-method}
\alias{print.rationalS3}
\alias{show.rationalS3}
\alias{print.rationalR6}
\alias{show.rationalR6}
\alias{Math,rationalS4-method}
\alias{Math2,rationalS4-method}
\alias{abs,rationalS4-method}
\alias{log,rationalS4-method}
\alias{log10,rationalS4-method}
\alias{logb,rationalS4-method}
\alias{log2,rationalS4-method}
\alias{gamma,rationalS4-method}
\alias{max,rationalS4-method}
\alias{min,rationalS4-method}
\alias{range,rationalS4-method}
\alias{prod,rationalS4-method}
\alias{sum,rationalS4-method}
\alias{Compare,rationalS4,numeric-method}
\alias{Compare,rationalS4,integer-method}
\alias{Compare,numeric,rationalS4-method}
\alias{Compare,integer,rationalS4-method}
\alias{Compare,rationalS4,rationalS4-method}
\alias{as.numeric,rationalS4-method}
\alias{as.integer,rationalS4-method}
\alias{as.character,rationalS4-method}
\alias{as.rationalS4,numeric-method}
\title{Rational Number Classes}
\format{An object of class \code{character} of length 1.}
\usage{
The classes are designed to be used in a similar way to integers and numerics in R.

rational(n, d, method = "R6")

\S4method{length}{rationalS4}(x)

\method{length}{rationalS3}(x, ...)

\method{length}{rationalR6}(x, ...)

\S4method{[}{rationalS4}(x, i, j, ..., drop = TRUE)

\S4method{[}{rationalS4}(x, i, j, ...) <- value

\S4method{[[}{rationalS4}(x, i, ..., drop)

\S4method{[[}{rationalS4}(x, i, j, ...) <- value

\method{[}{rationalS3}(x, i, j, ..., drop)

\method{[}{rationalS3}(x, i, j, ...) <- value

\method{[[}{rationalS3}(x, i, j, ..., drop)

\method{[[}{rationalS3}(x, i, j, ...) <- value

\method{[}{rationalR6}(x, i, j, ..., drop)

\method{[}{rationalR6}(x, i, j, ...) <- value

\method{[[}{rationalR6}(x, i, j, ..., drop)

\method{[[}{rationalR6}(x, i, j, ...) <- value

\S4method{print}{rationalS4}(x)

\S4method{show}{rationalS4}(object)

print.rationalS3(x)

show.rationalS3(x)

print.rationalR6(x)

show.rationalR6(x)

\S4method{Math}{rationalS4}(x)

\S4method{Math2}{rationalS4}(x)

\S4method{abs}{rationalS4}(x)

\S4method{log}{rationalS4}(x)

\S4method{log10}{rationalS4}(x)

\S4method{logb}{rationalS4}(x, base = exp(1))

\S4method{log2}{rationalS4}(x)

\S4method{gamma}{rationalS4}(x)

\S4method{max}{rationalS4}(x, na.rm = FALSE)

\S4method{min}{rationalS4}(x, na.rm = FALSE)

\S4method{range}{rationalS4}(x, na.rm = FALSE)

\S4method{prod}{rationalS4}(x, na.rm = FALSE)

\S4method{sum}{rationalS4}(x, na.rm = FALSE)

\S4method{Compare}{rationalS4,numeric}(e1, e2)

\S4method{Compare}{rationalS4,integer}(e1, e2)

\S4method{Compare}{numeric,rationalS4}(e1, e2)

\S4method{Compare}{integer,rationalS4}(e1, e2)

\S4method{Compare}{rationalS4,rationalS4}(e1, e2)

\S4method{as.numeric}{rationalS4}(x, ...)

\S4method{as.integer}{rationalS4}(x, ...)

\S4method{as.character}{rationalS4}(x, ...)

\S4method{as.rationalS4}{numeric}(x, cycles = 10,
  max.denominator = 2000)
}
\arguments{
\item{n, d}{the numerator and denominator of the class}

\item{method}{a length = 1 character vector.  One of "R6" (default), "S3", "S4"}

\item{x}{the rational number}

\item{i, j, ...indices}{specifying elements to extract or replace. Indices are numeric or character vectors or empty (missing) or NULL.}

\item{drop}{For matrices and arrays. If TRUE the result is coerced to the lowest possible dimension (see the examples). This only works for extracting elements, not for the replacement. See drop for further details.}

\item{x}{the rational number}

\item{i, j, ...indices}{specifying elements to extract or replace. Indices are numeric or character vectors or empty (missing) or NULL.}

\item{drop}{For matrices and arrays. If TRUE the result is coerced to the lowest possible dimension (see the examples). This only works for extracting elements, not for the replacement. See drop for further details.}

\item{x}{the rational number}

\item{i, j, ...indices}{specifying elements to extract or replace. Indices are numeric or character vectors or empty (missing) or NULL.}

\item{drop}{For matrices and arrays. If TRUE the result is coerced to the lowest possible dimension (see the examples). This only works for extracting elements, not for the replacement. See drop for further details.}

\item{x}{rational number}
}
\value{
the desired instance of the rational class
}
\description{
An S3, S4, and R6 class for a rational number
\itemize{
   \item rationalS3 - access fields with the '$' operator.
   \item rationalS4 - access fields with the '@' operator.
   \item rationalR6 - internal elements are private, so fields are accessed with accessor methods,
     \code{$getNumerator(), $getDenominator(), $getValue()}
}

generator rational number of class \code{rationalS3}, \code{rationalS4},
and \code{rationalR6}.  Each type of class has advantages and disadvantages
in performance and flexibility
}
\section{Fields}{

\describe{
\item{\code{n,d,v}}{the numerator, denominator, and value field of the S3 class}
}}

\section{Slots}{

\describe{
\item{\code{n,d,v}}{the numerator, denominator, and value slots of the S4 class}
}}

\note{
note that \code{Inf}, \code{NA}, \code{NaN}, and \code{NULL} all fail
on is.integer() and are not permitted
}
\examples{
 a <- rational(1L, 3L, method="S3")
 stopifnot(a$n == 1L && a$d == 3L && abs(a$v - 1/3) < 1E-12)
 stopifnot(class(a) == "rationalS3")
 b <- rational(2L, 5L, method="S4")
 stopifnot(b@n == 2L && b@d == 5L && abs(b@v - 2/5) < 1E-12)
 stopifnot(class(b) == "rationalS4" && isS4(b) && is(b, "rationalS4"))
 d <- rational(3L, 7L, method="R6")
 stopifnot(d$getNumerator() == 3L && d$getDenominator() == 7L && abs(d$getValue() - 3/7) < 1E-12)
 stopifnot(class(d)[1] == "rationalR6" && is(d, "rationalR6") && is(d, "R6"))
  a <- rational(c(3L, 5L, 6L), c(4L, 5L, 7L), "S4")
  stopifnot(length(a) == 3)
  a <- rational(c(3L, 5L, 6L), c(4L, 5L, 7L), "S3")
  stopifnot(length(a) == 3)
  a <- rational(c(3L, 5L, 6L), c(4L, 5L, 7L), "R6")
  stopifnot(length(a) == 3)
  a <- rational(c(3L, 5L, 6L), c(4L, 5L, 7L), "S4")
  stopifnot(a[2]@n == 5L)
  stopifnot(all(a[2:3]@n == c(5,6)))
  a <- rational(c(3L, 5L, 6L), c(4L, 5L, 7L), "S3")
  stopifnot(a[2]$n == 5L)
  stopifnot(all(a[2:3]$n == c(5,6)))
  a <- rational(c(3L, 5L, 6L), c(4L, 5L, 7L), "R6")
  stopifnot(a[2]$getNumerator() == 5L)
  stopifnot(all(a[2:3]$n == c(5,6)))
floor(rational(5L, 2L, "S4"))
sign(rational(-1L, 2L, "S4"))
round(rational(5L, 2L, "S4"), 0)
x <- abs(rational(-2L, 3L, "S4"))
stopifnot("rationalS4" \%in\% class(x))
log(rational(2L, 5L, "S4"))
log10(rational(2L, 5L, "S4"))
logb(rational(2L, 5L, "S4"), base = 5)
log2(rational(2L, 5L, "S4"))
gamma(rational(2L, 5L, "S4"))
max(rational(c(2L, 3L), c(5L, 1L), "S4"))
min(rational(c(2L, 3L), c(5L, 1L), "S4"))
range(rational(c(2L, 3L), c(5L, 1L), "S4"))
prod(rational(c(2L, 3L), c(5L, 1L), "S4"))
sum(rational(c(2L, 3L), c(5L, 1L), "S4"))
as.numeric(rational(c(2L, 3L), c(5L, 1L), "S4"))
as.integer(rational(c(2L, 3L), c(5L, 1L), "S4"))
as.integer(rational(8L, 3L, "S4"))
as.character(rational(c(2L, 3L), c(5L, 1L), "S4"))
as.rationalS4(33.3)
}
\seealso{
\code{\link{Extract}} for more full descriptions

\code{\link{Extract}} for more full descriptions

\code{\link{Extract}} for more full descriptions
}
\keyword{datasets}
